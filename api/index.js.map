{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/alvarogoederivera/web/remix-crud/app/root.tsx", "/Users/alvarogoederivera/web/remix-crud/app/routes/register.tsx", "../app/components/layout.tsx", "../app/components/form-field.tsx", "../app/utils/validator.server.ts", "../app/utils/auth.server.ts", "../app/utils/prisma.server.ts", "../app/utils/users.server.ts", "/Users/alvarogoederivera/web/remix-crud/app/routes/index.tsx", "/Users/alvarogoederivera/web/remix-crud/app/routes/login.tsx", "/Users/alvarogoederivera/web/remix-crud/app/routes/home.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import styles from \"~/styles/app.css\";\nimport type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import Layout from \"~/components/layout\";\nimport { FormField } from \"~/components/form-field\";\nimport { Icon } from \"~/components/icons\";\nimport type { ChangeEvent } from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport {\n  validateEmail,\n  validateName,\n  validatePassword,\n} from \"~/utils/validator.server\";\nimport { login, register, getUser } from \"~/utils/auth.server\";\nimport { Link, useActionData } from \"@remix-run/react\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return (await getUser(request)) ? redirect(\"/\") : null;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const action = form.get(\"_action\");\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  let firstName = form.get(\"firstName\");\n  let lastName = form.get(\"lastName\");\n\n  if (\n    typeof action !== \"string\" ||\n    typeof email !== \"string\" ||\n    typeof password !== \"string\"\n  ) {\n    return json(\n      {\n        error: \"Invalid Form Data\",\n        form: action,\n      },\n      { status: 400 }\n    );\n  }\n\n  if (\n    action === \"register\" &&\n    (typeof firstName !== \"string\" || typeof lastName !== \"string\")\n  ) {\n    return json(\n      {\n        error: \"Invalid Form Data\",\n        form: action,\n      },\n      { status: 400 }\n    );\n  }\n\n  const errors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n    ...(action === \"register\"\n      ? {\n          firstName: validateName((firstName as string) || \"\"),\n          lastName: validateName((lastName as string) || \"\"),\n        }\n      : {}),\n  };\n\n  if (Object.values(errors).some(Boolean))\n    return json(\n      {\n        errors,\n        fields: { email, password, firstName, lastName },\n        form: action,\n      },\n      { status: 400 }\n    );\n\n  switch (action) {\n    case \"login\": {\n      return await login({ email, password });\n    }\n    case \"register\": {\n      firstName = firstName as string;\n      lastName = lastName as string;\n      return await register({ email, password, firstName, lastName });\n    }\n    default:\n      return json(\n        {\n          error: \"Invalid Form Data\",\n        },\n        { status: 400 }\n      );\n  }\n};\n\nexport default function Login() {\n  const actionData = useActionData();\n  const [formError, setFormError] = useState(actionData?.error || \"\");\n  const [errors, setErrors] = useState(actionData?.errors || {});\n  const firstLoad = useRef(true);\n\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || \"\",\n    password: actionData?.fields?.password || \"\",\n    firstName: actionData?.fields?.firstName || \"\",\n    lastName: actionData?.fields?.lastName || \"\",\n  });\n\n  const handleInputChange = (\n    event: ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    setFormData({\n      ...formData,\n      [field]: event.target.value,\n    });\n  };\n\n  useEffect(() => {\n    if (!firstLoad.current) {\n      setFormError(\"\");\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    firstLoad.current = false;\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <img\n            className=\"mx-auto h-12 w-auto\"\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n            alt=\"Workflow\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Reg\u00EDstrate\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Registrate para comenzar a usar Google Meet\n          </p>\n        </div>\n        <form method=\"post\" className=\"mt-8 space-y-6\">\n          <p>{formError}</p>\n          <div className=\"rounded-md shadow-sm\">\n            <FormField\n              htmlFor=\"email\"\n              label=\"Email\"\n              placeholder=\"Ingresa tu email\"\n              type=\"email\"\n              value={formData.email}\n              onChange={(e) => handleInputChange(e, \"email\")}\n              error={errors?.email}\n            />\n            <FormField\n              htmlFor=\"password\"\n              label=\"Contrase\u00F1a\"\n              placeholder=\"Ingresa tu contrase\u00F1a\"\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) => handleInputChange(e, \"password\")}\n              error={errors?.password}\n            />\n            <FormField\n              htmlFor=\"firstName\"\n              label=\"Nombre\"\n              placeholder=\"Ingresa tu nombre\"\n              value={formData.firstName}\n              onChange={(e) => handleInputChange(e, \"firstName\")}\n              error={errors?.firstName}\n            />\n            <FormField\n              htmlFor=\"lastName\"\n              label=\"Apellido\"\n              placeholder=\"Ingresa tu apellido\"\n              value={formData.lastName}\n              onChange={(e) => handleInputChange(e, \"lastName\")}\n              error={errors?.lastName}\n            />\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              name=\"_action\"\n              value=\"register\"\n              className=\"disabled:opacity-50 group relative w-full flex justify-center py-3 px-4 border border-transparent font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-sm mb-4\"\n            >\n              Reg\u00EDstrate\n            </button>\n          </div>\n        </form>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          \u00BFTienes una cuenta?{\" \"}\n          <Link\n            className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n            to=\"/login\"\n          >\n            Iniciar sesi\u00F3n\n          </Link>\n        </p>\n      </div>\n    </Layout>\n  );\n}\n", "import React from \"react\";\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      {children}\n    </div>\n  );\n}\n", "import type { FormEvent } from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\n\ntype FormFieldProps = {\n  htmlFor: string;\n  label: string;\n  type?: string;\n  value: any;\n  onChange?: (...args: any) => any;\n  error?: string;\n  placeholder: string;\n  required?: boolean;\n};\n\nexport function FormField({\n  htmlFor,\n  label,\n  type = \"text\",\n  value,\n  onChange = () => {},\n  error = \"\",\n  required,\n  placeholder,\n}: FormFieldProps) {\n  const [errorText, setErrorText] = useState(error);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleChange = (e: FormEvent<HTMLInputElement>) => {\n    onChange(e);\n    setErrorText(\"\");\n  };\n\n  useEffect(() => {\n    setErrorText(error);\n  }, [error]);\n\n  return (\n    <div className=\"mb-4\">\n      <label\n        htmlFor={htmlFor}\n        className=\"text-sm text-gray-700 font-medium mb-2 inline-block\"\n      >\n        {label}\n      </label>\n      <input\n        ref={inputRef}\n        onChange={handleChange}\n        id={htmlFor}\n        name={htmlFor}\n        type={type}\n        placeholder={placeholder}\n        autoComplete={htmlFor}\n        required={required}\n        className=\"appearance-none block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-lg focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 shadow-sm\"\n        value={value}\n      />\n      <p className=\"mt-2 text-sm text-red-400\">{errorText || \"\"}</p>\n    </div>\n  );\n}\n", "export const validateEmail = (email: string): string | undefined => {\n  const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9\u2013]+(?:\\.[a-zA-Z0-9\u2013]+)*$/;\n  if(!email.length || !validRegex.test(email)){\n    return 'Please enter a valid email address';\n  }\n}\n\nexport const validatePassword = (password: string): string | undefined => {\n  if(password.length < 5){\n    return 'Please enter a password that is at least 5 characters long';\n  }\n}\n\nexport const validateName = (name: string): string | undefined => {\n  if(!name.length){\n    return 'Please enter a value';\n  }\n}\n", "import { json, createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport { prisma } from \"./prisma.server\";\nimport type { RegisterForm, LoginForm } from \"./types.server\";\nimport { createUser } from \"./users.server\";\nimport bcrypt from \"bcryptjs\";\n\nconst secret = process.env.SESSION_SECRET\n\nif(!secret) {\n  throw new Error(\"SESSION_SECRET is not set\")\n}\n\nconst storage = createCookieSessionStorage({\n  cookie: {\n    name: \"google-meet-clone\",\n    secure: process.env.NODE_ENV === \"production\",\n    secrets: [secret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true\n  }\n})\n\nexport const register = async (form: RegisterForm) => {\n  const exists = await prisma.user.count({ where: { email: form.email } });\n  if (exists) {\n    return json({ error: \"Email already exists\" }, { status: 400 });\n  }\n\n  const newUser = await createUser(form);\n\n  if (!newUser) {\n    return json(\n      {\n        error: \"Something went wrong trying to create a new user\",\n        fields: { email: form.email, password: form.password },\n      },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession(newUser.id, '/');\n};\n\nexport const login = async (form: LoginForm) => {\n  const user = await prisma.user.findUnique({ where: { email: form.email } });\n\n  if (!user || !(await bcrypt.compare(form.password, user.password))) {\n    return json({ error: \"Incorrect login\" }, { status: 400 });\n  }\n\n  return createUserSession(user.id, '/');\n};\n\n\nexport const createUserSession = async (userId: string, redirectTo: string) => {\n  const session = await storage.getSession();\n  session.set('userId', userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session)\n    }\n  })\n}\n\nexport async function requireUserId(request: Request, redirectTo: string = new URL(request.url).pathname) {\n  const session = await getUserSession(request)\n  const userId = session.get('userId')\n  if(!userId || typeof userId !== 'string') {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]])\n    throw redirect(`/login?${searchParams}`)\n  }\n  return userId\n}\n\nfunction getUserSession(request: Request) {\n  return storage.getSession(request.headers.get('Cookie'))\n}\n\n\n\nasync function getUserId(request: Request) {\n  const session = await getUserSession(request);\n  const userId = session.get(\"userId\");\n  if (!userId || typeof userId !== \"string\") return null;\n\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (typeof userId !== \"string\") {\n    return null;\n  }\n  try {\n    const user = await prisma.user.findUnique(\n      {\n        where: { id: userId },\n        select: {id: true, email: true, profile: true}\n      }\n    );\n    return user;\n  } catch {\n    throw logout(request)\n  }\n}\n\nexport async function logout(request: Request) {\n  const session = await getUserSession(request);\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    }\n  })\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\ndeclare global {\n  var _db: PrismaClient | undefined;\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n  prisma.$connect();\n} else {\n  if (!global._db) {\n    global._db = new PrismaClient();\n    global._db.$connect();\n  }\n  prisma = global._db;\n}\n\nexport { prisma };\n", "import { prisma } from \"./prisma.server\";\nimport type { RegisterForm } from \"./types.server\";\nimport bcrypt from \"bcryptjs\";\n\nexport const createUser = async (user: RegisterForm) => {\n  const passwordHash = await bcrypt.hash(user.password, 10);\n  const newUser = await prisma.user.create({\n    data: {\n      email: user.email,\n      password: passwordHash,\n      profile: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n      },\n    },\n  });\n  return { id: newUser.id, email: user.email };\n};\n", "import { requireUserId } from \"~/utils/auth.server\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireUserId(request);\n  return redirect(\"/home\");\n};\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>Welcome to Remix</h1>\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/blog\"\n            rel=\"noreferrer\"\n          >\n            15m Quickstart Blog Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/jokes\"\n            rel=\"noreferrer\"\n          >\n            Deep Dive Jokes App Tutorial\n          </a>\n        </li>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n            Remix Docs\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n", "import Layout from \"~/components/layout\";\nimport { FormField } from \"~/components/form-field\";\nimport { Icon } from \"~/components/icons\";\nimport type { ChangeEvent } from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport {\n  validateEmail,\n  validateName,\n  validatePassword,\n} from \"~/utils/validator.server\";\nimport { login, register, getUser } from \"~/utils/auth.server\";\nimport { Link, useActionData } from \"@remix-run/react\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return (await getUser(request)) ? redirect(\"/\") : null;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const action = form.get(\"_action\");\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  let firstName = form.get(\"firstName\");\n  let lastName = form.get(\"lastName\");\n\n  if (\n    typeof action !== \"string\" ||\n    typeof email !== \"string\" ||\n    typeof password !== \"string\"\n  ) {\n    return json(\n      {\n        error: \"Invalid Form Data\",\n        form: action,\n      },\n      { status: 400 }\n    );\n  }\n\n  if (\n    action === \"register\" &&\n    (typeof firstName !== \"string\" || typeof lastName !== \"string\")\n  ) {\n    return json(\n      {\n        error: \"Invalid Form Data\",\n        form: action,\n      },\n      { status: 400 }\n    );\n  }\n\n  const errors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n    ...(action === \"register\"\n      ? {\n          firstName: validateName((firstName as string) || \"\"),\n          lastName: validateName((lastName as string) || \"\"),\n        }\n      : {}),\n  };\n\n  if (Object.values(errors).some(Boolean))\n    return json(\n      {\n        errors,\n        fields: { email, password, firstName, lastName },\n        form: action,\n      },\n      { status: 400 }\n    );\n\n  switch (action) {\n    case \"login\": {\n      return await login({ email, password });\n    }\n    case \"register\": {\n      firstName = firstName as string;\n      lastName = lastName as string;\n      return await register({ email, password, firstName, lastName });\n    }\n    default:\n      return json(\n        {\n          error: \"Invalid Form Data\",\n        },\n        { status: 400 }\n      );\n  }\n};\n\nexport default function Login() {\n  const actionData = useActionData();\n  const [formError, setFormError] = useState(actionData?.error || \"\");\n  const [errors, setErrors] = useState(actionData?.errors || {});\n  const firstLoad = useRef(true);\n\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || \"\",\n    password: actionData?.fields?.password || \"\",\n    firstName: actionData?.fields?.firstName || \"\",\n    lastName: actionData?.fields?.lastName || \"\",\n  });\n\n  const handleInputChange = (\n    event: ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    setFormData({\n      ...formData,\n      [field]: event.target.value,\n    });\n  };\n\n  useEffect(() => {\n    if (!firstLoad.current) {\n      setFormError(\"\");\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    firstLoad.current = false;\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <img\n            className=\"mx-auto h-12 w-auto\"\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n            alt=\"Workflow\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Accede a tu cuenta\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Inicia sesi\u00F3n para comenzar a usar Google Meet\n          </p>\n        </div>\n        <form method=\"post\" className=\"mt-8 space-y-6\">\n          <p>{formError}</p>\n          <div className=\"rounded-md shadow-sm\">\n            <FormField\n              htmlFor=\"email\"\n              label=\"Email\"\n              placeholder=\"Ingresa tu email\"\n              type=\"email\"\n              value={formData.email}\n              onChange={(e) => handleInputChange(e, \"email\")}\n              error={errors?.email}\n            />\n            <FormField\n              htmlFor=\"password\"\n              label=\"Contrase\u00F1a\"\n              placeholder=\"Ingresa tu contrase\u00F1a\"\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) => handleInputChange(e, \"password\")}\n              error={errors?.password}\n            />\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              name=\"_action\"\n              value=\"login\"\n              className=\"disabled:opacity-50 group relative w-full flex justify-center py-3 px-4 border border-transparent font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-sm mb-4\"\n            >\n              Iniciar sesi\u00F3n\n            </button>\n          </div>\n        </form>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          \u00BFA\u00FAn no tienes una cuenta?{\" \"}\n          <Link\n            className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n            to=\"/register\"\n          >\n            Reg\u00EDstrate\n          </Link>\n        </p>\n      </div>\n    </Layout>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport type { ChangeEvent } from \"react\";\nimport { useRef } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { requireUserId } from \"~/utils/auth.server\";\n// import { jwt } from \"twilio\";\nimport { FormField } from \"~/components/form-field\";\nimport TwilioVideo from \"twilio-video\";\n\nconst Video = ({ token }: { token: string }) => {\n  const localVidRef = useRef<HTMLDivElement>(null);\n  const remoteVidRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    TwilioVideo.connect(token, {\n      video: true,\n      audio: true,\n      name: \"test\",\n    }).then((room) => {\n      // Attach the local video\n      TwilioVideo.createLocalVideoTrack().then((track) => {\n        localVidRef.current?.appendChild(track.attach());\n      });\n\n      const addParticipant = (participant: any) => {\n        participant.tracks.forEach((publication: any) => {\n          if (publication.isSubscribed) {\n            const track = publication.track;\n            remoteVidRef.current?.appendChild(track?.attach());\n          }\n        });\n        participant.on(\"trackSubscribed\", (track: any) => {\n          remoteVidRef.current?.appendChild(track?.attach());\n        });\n      };\n\n      room.on(\"participantConnected\", addParticipant);\n      room.participants.forEach(addParticipant);\n    });\n  }, [token]);\n\n  return (\n    <div>\n      <div ref={localVidRef} />\n      <div ref={remoteVidRef} />\n    </div>\n  );\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // const AccessToken = jwt.AccessToken;\n  // const VideoGrant = AccessToken.VideoGrant;\n\n  // const generateToken = () => {\n  //   return new AccessToken(\n  //     process.env.TWILIO_ACCOUNT_SID as string,\n  //     process.env.TWILIO_API_KEY_SID as string,\n  //     process.env.TWILIO_API_SECRET as string\n  //   );\n  // };\n\n  // const videoToken = (identity: any, room: any) => {\n  //   let videoGrant;\n  //   if (room) {\n  //     videoGrant = new VideoGrant({\n  //       room,\n  //     });\n  //   } else {\n  //     videoGrant = new VideoGrant();\n  //   }\n  //   const token = generateToken();\n  //   token.addGrant(videoGrant);\n  //   token.identity = identity;\n  //   return token;\n  // };\n\n  // const sendTokenResponse = (token: any) => {\n  //   const body = JSON.stringify({\n  //     token: token.toJwt(),\n  //   });\n  //   return new Response(body, {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   });\n  // };\n\n  // const token = videoToken(\"hola\", \"room\");\n\n  // sendTokenResponse(token);\n\n  await requireUserId(request);\n  return null;\n};\n\nexport default function Home() {\n  const [token, setToken] = useState(\"\");\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    room: \"\",\n  });\n\n  const handleInputChange = (\n    event: ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    setFormData({\n      ...formData,\n      [field]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    const response = await fetch(\n      \"https://jade-caiman-4432.twil.io/create-token\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          identity: formData.name,\n        }),\n      }\n    );\n    setToken(await response.json());\n  };\n\n  return (\n    <div>\n      {token ? (\n        <Video token={token} />\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <FormField\n            htmlFor=\"name\"\n            label=\"Name\"\n            placeholder=\"Ingresa tu nombre\"\n            type=\"text\"\n            value={formData.name}\n            onChange={(e) => handleInputChange(e, \"name\")}\n          />\n          <FormField\n            htmlFor=\"room\"\n            label=\"Room\"\n            placeholder=\"Ingresa tu room\"\n            type=\"text\"\n            value={formData.room}\n            onChange={(e) => handleInputChange(e, \"room\")}\n          />\n          <button>Entrar</button>\n        </form>\n      )}\n    </div>\n  );\n}\n", "export default {'version':'d1961f42','entry':{'module':'/build/entry.client-NY57L4XV.js','imports':['/build/_shared/chunk-BEUI65KE.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4T5CFAOY.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-YGMMZB7F.js','imports':['/build/_shared/chunk-NKP2BME2.js','/build/_shared/chunk-PMDNWKIC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-QOTC733N.js','imports':['/build/_shared/chunk-PMDNWKIC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-XFP7QH6N.js','imports':['/build/_shared/chunk-W45DJVYN.js','/build/_shared/chunk-NKP2BME2.js','/build/_shared/chunk-PMDNWKIC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/register':{'id':'routes/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/register-7SMN4A6E.js','imports':['/build/_shared/chunk-W45DJVYN.js','/build/_shared/chunk-NKP2BME2.js','/build/_shared/chunk-PMDNWKIC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D1961F42.js'};", "\nimport * as entryServer from \"/Users/alvarogoederivera/web/remix-crud/app/entry.server.tsx\";\nimport * as route0 from \"/Users/alvarogoederivera/web/remix-crud/app/root.tsx\";\nimport * as route1 from \"/Users/alvarogoederivera/web/remix-crud/app/routes/register.tsx\";\nimport * as route2 from \"/Users/alvarogoederivera/web/remix-crud/app/routes/index.tsx\";\nimport * as route3 from \"/Users/alvarogoederivera/web/remix-crud/app/routes/login.tsx\";\nimport * as route4 from \"/Users/alvarogoederivera/web/remix-crud/app/routes/home.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/register\": {\n      id: \"routes/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAEA,oBAOO;AAEA,iBAAiB;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAG9B,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGG,eAAe;AAC5B,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;AChCR;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,oBAAkB;AAEH,gBAAgB,EAAE,YAA2C;AAC1E,SACE,oDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ;AAAA;;;ACJP,oBAA4C;AAarC,mBAAmB;AAAA,EACxB;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA,WAAW,MAAM;AAAA;AAAA,EACjB,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,GACiB;AACjB,QAAM,CAAC,WAAW,gBAAgB,4BAAS;AAC3C,QAAM,WAAW,0BAAyB;AAE1C,QAAM,eAAe,CAAC,MAAmC;AACvD,aAAS;AACT,iBAAa;AAAA;AAGf,+BAAU,MAAM;AACd,iBAAa;AAAA,KACZ,CAAC;AAEJ,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IACE;AAAA,IACA,WAAU;AAAA,KAET,QAEH,oCAAC,SAAD;AAAA,IACE,KAAK;AAAA,IACL,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd;AAAA,IACA,WAAU;AAAA,IACV;AAAA,MAEF,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAA6B,aAAa;AAAA;;;AFpD7D,oBAA4C;AAC5C,mBAA+B;;;AGLxB,IAAM,gBAAgB,CAAC,UAAsC;AAClE,QAAM,aAAa;AACnB,MAAG,CAAC,MAAM,UAAU,CAAC,WAAW,KAAK,QAAO;AAC1C,WAAO;AAAA;AAAA;AAIJ,IAAM,mBAAmB,CAAC,aAAyC;AACxE,MAAG,SAAS,SAAS,GAAE;AACrB,WAAO;AAAA;AAAA;AAIJ,IAAM,eAAe,CAAC,SAAqC;AAChE,MAAG,CAAC,KAAK,QAAO;AACd,WAAO;AAAA;AAAA;;;ACfX,kBAA2D;;;ACA3D,oBAA6B;AAE7B,IAAI;AAKJ,IAAI,OAAuC;AACzC,WAAS,IAAI;AACb,SAAO;AAAA,OACF;AACL,MAAI,CAAC,OAAO,KAAK;AACf,WAAO,MAAM,IAAI;AACjB,WAAO,IAAI;AAAA;AAEb,WAAS,OAAO;AAAA;;;ACblB,sBAAmB;AAEZ,IAAM,aAAa,OAAO,SAAuB;AACtD,QAAM,eAAe,MAAM,wBAAO,KAAK,KAAK,UAAU;AACtD,QAAM,UAAU,MAAM,OAAO,KAAK,OAAO;AAAA,IACvC,MAAM;AAAA,MACJ,OAAO,KAAK;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,QACP,WAAW,KAAK;AAAA,QAChB,UAAU,KAAK;AAAA;AAAA;AAAA;AAIrB,SAAO,EAAE,IAAI,QAAQ,IAAI,OAAO,KAAK;AAAA;;;AFZvC,uBAAmB;AAEnB,IAAM,SAAS,QAAQ,IAAI;AAE3B,IAAG,CAAC,QAAQ;AACV,QAAM,IAAI,MAAM;AAAA;AAGlB,IAAM,UAAU,4CAA2B;AAAA,EACzC,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ,KAAK,KAAK,KAAK;AAAA,IACvB,UAAU;AAAA;AAAA;AAIP,IAAM,WAAW,OAAO,SAAuB;AACpD,QAAM,SAAS,MAAM,OAAO,KAAK,MAAM,EAAE,OAAO,EAAE,OAAO,KAAK;AAC9D,MAAI,QAAQ;AACV,WAAO,sBAAK,EAAE,OAAO,0BAA0B,EAAE,QAAQ;AAAA;AAG3D,QAAM,UAAU,MAAM,WAAW;AAEjC,MAAI,CAAC,SAAS;AACZ,WAAO,sBACL;AAAA,MACE,OAAO;AAAA,MACP,QAAQ,EAAE,OAAO,KAAK,OAAO,UAAU,KAAK;AAAA,OAE9C,EAAE,QAAQ;AAAA;AAId,SAAO,kBAAkB,QAAQ,IAAI;AAAA;AAGhC,IAAM,QAAQ,OAAO,SAAoB;AAC9C,QAAM,OAAO,MAAM,OAAO,KAAK,WAAW,EAAE,OAAO,EAAE,OAAO,KAAK;AAEjE,MAAI,CAAC,QAAQ,CAAE,MAAM,yBAAO,QAAQ,KAAK,UAAU,KAAK,WAAY;AAClE,WAAO,sBAAK,EAAE,OAAO,qBAAqB,EAAE,QAAQ;AAAA;AAGtD,SAAO,kBAAkB,KAAK,IAAI;AAAA;AAI7B,IAAM,oBAAoB,OAAO,QAAgB,eAAuB;AAC7E,QAAM,UAAU,MAAM,QAAQ;AAC9B,UAAQ,IAAI,UAAU;AACtB,SAAO,0BAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,cAAc;AAAA;AAAA;AAAA;AAKhD,6BAAoC,SAAkB,aAAqB,IAAI,IAAI,QAAQ,KAAK,UAAU;AACxG,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAG,CAAC,UAAU,OAAO,WAAW,UAAU;AACxC,UAAM,eAAe,IAAI,gBAAgB,CAAC,CAAC,cAAc;AACzD,UAAM,0BAAS,UAAU;AAAA;AAE3B,SAAO;AAAA;AAGT,wBAAwB,SAAkB;AACxC,SAAO,QAAQ,WAAW,QAAQ,QAAQ,IAAI;AAAA;AAKhD,yBAAyB,SAAkB;AACzC,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC,UAAU,OAAO,WAAW;AAAU,WAAO;AAElD,SAAO;AAAA;AAGT,uBAA8B,SAAkB;AAC9C,QAAM,SAAS,MAAM,UAAU;AAC/B,MAAI,OAAO,WAAW,UAAU;AAC9B,WAAO;AAAA;AAET,MAAI;AACF,UAAM,OAAO,MAAM,OAAO,KAAK,WAC7B;AAAA,MACE,OAAO,EAAE,IAAI;AAAA,MACb,QAAQ,EAAC,IAAI,MAAM,OAAO,MAAM,SAAS;AAAA;AAG7C,WAAO;AAAA,UACP;AACA,UAAM,OAAO;AAAA;AAAA;AAIjB,sBAA6B,SAAkB;AAC7C,QAAM,UAAU,MAAM,eAAe;AACrC,SAAO,0BAAS,UAAU;AAAA,IACxB,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,eAAe;AAAA;AAAA;AAAA;;;AJnGjD,oBAAoC;AAE7B,IAAM,SAAyB,OAAO,EAAE,cAAc;AAC3D,SAAQ,MAAM,QAAQ,WAAY,2BAAS,OAAO;AAAA;AAG7C,IAAM,SAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,UAAS,KAAK,IAAI;AACxB,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,WAAW,KAAK,IAAI;AAC1B,MAAI,YAAY,KAAK,IAAI;AACzB,MAAI,WAAW,KAAK,IAAI;AAExB,MACE,OAAO,YAAW,YAClB,OAAO,UAAU,YACjB,OAAO,aAAa,UACpB;AACA,WAAO,uBACL;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,OAER,EAAE,QAAQ;AAAA;AAId,MACE,YAAW,cACV,QAAO,cAAc,YAAY,OAAO,aAAa,WACtD;AACA,WAAO,uBACL;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,OAER,EAAE,QAAQ;AAAA;AAId,QAAM,SAAS;AAAA,IACb,OAAO,cAAc;AAAA,IACrB,UAAU,iBAAiB;AAAA,KACvB,YAAW,aACX;AAAA,IACE,WAAW,aAAc,aAAwB;AAAA,IACjD,UAAU,aAAc,YAAuB;AAAA,MAEjD;AAGN,MAAI,OAAO,OAAO,QAAQ,KAAK;AAC7B,WAAO,uBACL;AAAA,MACE;AAAA,MACA,QAAQ,EAAE,OAAO,UAAU,WAAW;AAAA,MACtC,MAAM;AAAA,OAER,EAAE,QAAQ;AAGd,UAAQ;AAAA,SACD,SAAS;AACZ,aAAO,MAAM,MAAM,EAAE,OAAO;AAAA;AAAA,SAEzB,YAAY;AACf,kBAAY;AACZ,iBAAW;AACX,aAAO,MAAM,SAAS,EAAE,OAAO,UAAU,WAAW;AAAA;AAAA;AAGpD,aAAO,uBACL;AAAA,QACE,OAAO;AAAA,SAET,EAAE,QAAQ;AAAA;AAAA;AAKH,iBAAiB;AA9FhC;AA+FE,QAAM,aAAa;AACnB,QAAM,CAAC,WAAW,gBAAgB,4BAAS,0CAAY,UAAS;AAChE,QAAM,CAAC,QAAQ,aAAa,4BAAS,0CAAY,WAAU;AAC3D,QAAM,YAAY,0BAAO;AAEzB,QAAM,CAAC,UAAU,eAAe,4BAAS;AAAA,IACvC,OAAO,gDAAY,WAAZ,mBAAoB,UAAS;AAAA,IACpC,UAAU,gDAAY,WAAZ,mBAAoB,aAAY;AAAA,IAC1C,WAAW,gDAAY,WAAZ,mBAAoB,cAAa;AAAA,IAC5C,UAAU,gDAAY,WAAZ,mBAAoB,aAAY;AAAA;AAG5C,QAAM,oBAAoB,CACxB,OACA,UACG;AACH,gBAAY,iCACP,WADO;AAAA,OAET,QAAQ,MAAM,OAAO;AAAA;AAAA;AAI1B,+BAAU,MAAM;AACd,QAAI,CAAC,UAAU,SAAS;AACtB,mBAAa;AAAA;AAAA,KAEd,CAAC;AAEJ,+BAAU,MAAM;AACd,cAAU,UAAU;AAAA,KACnB;AAEH,SACE,oCAAC,QAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAI;AAAA,IACJ,KAAI;AAAA,MAEN,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAyD,kBAGvE,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC,iDAIxD,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,KAAD,MAAI,YACJ,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEjB,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEjB,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEjB,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,OAGnB,oCAAC,OAAD,MACE,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,WAAU;AAAA,KACX,oBAKL,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC,0BAChC,KACpB,oCAAC,oBAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAG;AAAA,KACJ;AAAA;;;AOrMX;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAyB;AAElB,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,cAAc;AACpB,SAAO,2BAAS;AAAA;AAGH,iBAAiB;AAC9B,SACE,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,YAAY,yBAAyB,YAAY;AAAA,KAC7D,oCAAC,MAAD,MAAI,qBACJ,oCAAC,MAAD,MACE,oCAAC,MAAD,MACE,oCAAC,KAAD;AAAA,IACE,QAAO;AAAA,IACP,MAAK;AAAA,IACL,KAAI;AAAA,KACL,kCAIH,oCAAC,MAAD,MACE,oCAAC,KAAD;AAAA,IACE,QAAO;AAAA,IACP,MAAK;AAAA,IACL,KAAI;AAAA,KACL,kCAIH,oCAAC,MAAD,MACE,oCAAC,KAAD;AAAA,IAAG,QAAO;AAAA,IAAS,MAAK;AAAA,IAAyB,KAAI;AAAA,KAAa;AAAA;;;ACjC5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,oBAA4C;AAC5C,mBAA+B;AAQ/B,oBAAoC;AAE7B,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,SAAQ,MAAM,QAAQ,WAAY,2BAAS,OAAO;AAAA;AAG7C,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,UAAS,KAAK,IAAI;AACxB,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,WAAW,KAAK,IAAI;AAC1B,MAAI,YAAY,KAAK,IAAI;AACzB,MAAI,WAAW,KAAK,IAAI;AAExB,MACE,OAAO,YAAW,YAClB,OAAO,UAAU,YACjB,OAAO,aAAa,UACpB;AACA,WAAO,uBACL;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,OAER,EAAE,QAAQ;AAAA;AAId,MACE,YAAW,cACV,QAAO,cAAc,YAAY,OAAO,aAAa,WACtD;AACA,WAAO,uBACL;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,OAER,EAAE,QAAQ;AAAA;AAId,QAAM,SAAS;AAAA,IACb,OAAO,cAAc;AAAA,IACrB,UAAU,iBAAiB;AAAA,KACvB,YAAW,aACX;AAAA,IACE,WAAW,aAAc,aAAwB;AAAA,IACjD,UAAU,aAAc,YAAuB;AAAA,MAEjD;AAGN,MAAI,OAAO,OAAO,QAAQ,KAAK;AAC7B,WAAO,uBACL;AAAA,MACE;AAAA,MACA,QAAQ,EAAE,OAAO,UAAU,WAAW;AAAA,MACtC,MAAM;AAAA,OAER,EAAE,QAAQ;AAGd,UAAQ;AAAA,SACD,SAAS;AACZ,aAAO,MAAM,MAAM,EAAE,OAAO;AAAA;AAAA,SAEzB,YAAY;AACf,kBAAY;AACZ,iBAAW;AACX,aAAO,MAAM,SAAS,EAAE,OAAO,UAAU,WAAW;AAAA;AAAA;AAGpD,aAAO,uBACL;AAAA,QACE,OAAO;AAAA,SAET,EAAE,QAAQ;AAAA;AAAA;AAKH,kBAAiB;AA9FhC;AA+FE,QAAM,aAAa;AACnB,QAAM,CAAC,WAAW,gBAAgB,4BAAS,0CAAY,UAAS;AAChE,QAAM,CAAC,QAAQ,aAAa,4BAAS,0CAAY,WAAU;AAC3D,QAAM,YAAY,0BAAO;AAEzB,QAAM,CAAC,UAAU,eAAe,4BAAS;AAAA,IACvC,OAAO,gDAAY,WAAZ,mBAAoB,UAAS;AAAA,IACpC,UAAU,gDAAY,WAAZ,mBAAoB,aAAY;AAAA,IAC1C,WAAW,gDAAY,WAAZ,mBAAoB,cAAa;AAAA,IAC5C,UAAU,gDAAY,WAAZ,mBAAoB,aAAY;AAAA;AAG5C,QAAM,oBAAoB,CACxB,OACA,UACG;AACH,gBAAY,iCACP,WADO;AAAA,OAET,QAAQ,MAAM,OAAO;AAAA;AAAA;AAI1B,+BAAU,MAAM;AACd,QAAI,CAAC,UAAU,SAAS;AACtB,mBAAa;AAAA;AAAA,KAEd,CAAC;AAEJ,+BAAU,MAAM;AACd,cAAU,UAAU;AAAA,KACnB;AAEH,SACE,oCAAC,QAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,KAAI;AAAA,IACJ,KAAI;AAAA,MAEN,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAyD,uBAGvE,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC,uDAIxD,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,KAAD,MAAI,YACJ,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEjB,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,OAGnB,oCAAC,OAAD,MACE,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,WAAU;AAAA,KACX,wBAKL,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAyC,oCACzB,KAC3B,oCAAC,oBAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAG;AAAA,KACJ;AAAA;;;ACrLX;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAuB;AACvB,qBAAoC;AAIpC,0BAAwB;AAExB,IAAM,QAAQ,CAAC,EAAE,YAA+B;AAC9C,QAAM,cAAc,0BAAuB;AAC3C,QAAM,eAAe,0BAAuB;AAE5C,gCAAU,MAAM;AACd,gCAAY,QAAQ,OAAO;AAAA,MACzB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA,OACL,KAAK,CAAC,SAAS;AAEhB,kCAAY,wBAAwB,KAAK,CAAC,UAAU;AApB1D;AAqBQ,0BAAY,YAAZ,mBAAqB,YAAY,MAAM;AAAA;AAGzC,YAAM,iBAAiB,CAAC,gBAAqB;AAC3C,oBAAY,OAAO,QAAQ,CAAC,gBAAqB;AAzBzD;AA0BU,cAAI,YAAY,cAAc;AAC5B,kBAAM,QAAQ,YAAY;AAC1B,+BAAa,YAAb,mBAAsB,YAAY,+BAAO;AAAA;AAAA;AAG7C,oBAAY,GAAG,mBAAmB,CAAC,UAAe;AA/B1D;AAgCU,6BAAa,YAAb,mBAAsB,YAAY,+BAAO;AAAA;AAAA;AAI7C,WAAK,GAAG,wBAAwB;AAChC,WAAK,aAAa,QAAQ;AAAA;AAAA,KAE3B,CAAC;AAEJ,SACE,oCAAC,OAAD,MACE,oCAAC,OAAD;AAAA,IAAK,KAAK;AAAA,MACV,oCAAC,OAAD;AAAA,IAAK,KAAK;AAAA;AAAA;AAKT,IAAM,UAAyB,OAAO,EAAE,cAAc;AA0C3D,QAAM,cAAc;AACpB,SAAO;AAAA;AAGM,gBAAgB;AAC7B,QAAM,CAAC,OAAO,YAAY,6BAAS;AAEnC,QAAM,CAAC,UAAU,eAAe,6BAAS;AAAA,IACvC,MAAM;AAAA,IACN,MAAM;AAAA;AAGR,QAAM,oBAAoB,CACxB,OACA,UACG;AACH,gBAAY,iCACP,WADO;AAAA,OAET,QAAQ,MAAM,OAAO;AAAA;AAAA;AAI1B,QAAM,eAAe,OAAO,MAAW;AACrC,MAAE;AACF,UAAM,WAAW,MAAM,MACrB,iDACA;AAAA,MACE,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA;AAAA,MAElB,MAAM,KAAK,UAAU;AAAA,QACnB,UAAU,SAAS;AAAA;AAAA;AAIzB,aAAS,MAAM,SAAS;AAAA;AAG1B,SACE,oCAAC,OAAD,MACG,QACC,oCAAC,OAAD;AAAA,IAAO;AAAA,OAEP,oCAAC,QAAD;AAAA,IAAM,UAAU;AAAA,KACd,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,MAExC,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,MAExC,oCAAC,UAAD,MAAQ;AAAA;;;ACxJlB,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,eAAc,EAAC,MAAK,eAAc,YAAW,QAAO,QAAO,QAAO,SAAQ,QAAU,iBAAgB,QAAU,UAAS,kCAAiC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,mBAAkB,EAAC,MAAK,mBAAkB,YAAW,QAAO,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,sCAAqC,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACQvtD,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
